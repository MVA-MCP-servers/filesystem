/**
 * –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤ –ø–µ—Ä–µ–∫—Ä—ã—Ç–∏—è
 */

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –ø–µ—Ä–µ–∫—Ä—ã—Ç–∏—è –∫–æ–Ω—Ü–∞ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–∏ –∏ –Ω–∞—á–∞–ª–∞ –≤—Ç–æ—Ä–æ–π
function findMaxOverlap(str1: string, str2: string): number {
  const maxPossibleOverlap = Math.min(str1.length, str2.length);
  for (let len = maxPossibleOverlap; len > 0; len--) {
    if (str1.slice(-len) === str2.slice(0, len)) {
      return len;
    }
  }
  return 0;
}

// –ü—Ä–æ–≤–µ—Ä–∫–∏
console.log('–¢–µ—Å—Ç –∞–ª–≥–æ—Ä–∏—Ç–º–∞ –ø–æ–∏—Å–∫–∞ –ø–µ—Ä–µ–∫—Ä—ã—Ç–∏—è:');
console.log('---------------------------------');

// –¢–µ—Å—Ç 1: –ù–µ—Ç –ø–µ—Ä–µ–∫—Ä—ã—Ç–∏—è
const test1_str1 = 'hello';
const test1_str2 = 'world';
const test1_result = findMaxOverlap(test1_str1, test1_str2);
console.log(`–¢–µ—Å—Ç 1: '${test1_str1}' –∏ '${test1_str2}' -> –ø–µ—Ä–µ–∫—Ä—ã—Ç–∏–µ: ${test1_result}`);
console.log(`–û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: 0`);
console.log(`–¢–µ—Å—Ç ${test1_result === 0 ? '–ü–†–û–ô–î–ï–ù' : '–ù–ï –ü–†–û–ô–î–ï–ù'}`);
console.log();

// –¢–µ—Å—Ç 2: –ü–æ–ª–Ω–æ–µ –ø–µ—Ä–µ–∫—Ä—ã—Ç–∏–µ
const test2_str1 = 'testing';
const test2_str2 = 'testing123';
const test2_result = findMaxOverlap(test2_str1, test2_str2);
console.log(`–¢–µ—Å—Ç 2: '${test2_str1}' –∏ '${test2_str2}' -> –ø–µ—Ä–µ–∫—Ä—ã—Ç–∏–µ: ${test2_result}`);
console.log(`–û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: 7`);
console.log(`–¢–µ—Å—Ç ${test2_result === 7 ? '–ü–†–û–ô–î–ï–ù' : '–ù–ï –ü–†–û–ô–î–ï–ù'}`);
console.log();

// –¢–µ—Å—Ç 3: –ß–∞—Å—Ç–∏—á–Ω–æ–µ –ø–µ—Ä–µ–∫—Ä—ã—Ç–∏–µ
const test3_str1 = 'hello world';
const test3_str2 = 'world peace';
const test3_result = findMaxOverlap(test3_str1, test3_str2);
console.log(`–¢–µ—Å—Ç 3: '${test3_str1}' –∏ '${test3_str2}' -> –ø–µ—Ä–µ–∫—Ä—ã—Ç–∏–µ: ${test3_result}`);
console.log(`–û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: 5`);
console.log(`–¢–µ—Å—Ç ${test3_result === 5 ? '–ü–†–û–ô–î–ï–ù' : '–ù–ï –ü–†–û–ô–î–ï–ù'}`);
console.log();

// –¢–µ—Å—Ç 4: –ü—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏
const test4_str1 = '';
const test4_str2 = '';
const test4_result = findMaxOverlap(test4_str1, test4_str2);
console.log(`–¢–µ—Å—Ç 4: '${test4_str1}' –∏ '${test4_str2}' -> –ø–µ—Ä–µ–∫—Ä—ã—Ç–∏–µ: ${test4_result}`);
console.log(`–û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: 0`);
console.log(`–¢–µ—Å—Ç ${test4_result === 0 ? '–ü–†–û–ô–î–ï–ù' : '–ù–ï –ü–†–û–ô–î–ï–ù'}`);
console.log();

// –¢–µ—Å—Ç 5: –û–¥–Ω–∞ –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞
const test5_str1 = 'hello';
const test5_str2 = '';
const test5_result = findMaxOverlap(test5_str1, test5_str2);
console.log(`–¢–µ—Å—Ç 5: '${test5_str1}' –∏ '${test5_str2}' -> –ø–µ—Ä–µ–∫—Ä—ã—Ç–∏–µ: ${test5_result}`);
console.log(`–û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: 0`);
console.log(`–¢–µ—Å—Ç ${test5_result === 0 ? '–ü–†–û–ô–î–ï–ù' : '–ù–ï –ü–†–û–ô–î–ï–ù'}`);
console.log();

// –¢–µ—Å—Ç 6: –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
const test6_str1 = 'special$chars';
const test6_str2 = '$chars test';
const test6_result = findMaxOverlap(test6_str1, test6_str2);
console.log(`–¢–µ—Å—Ç 6: '${test6_str1}' –∏ '${test6_str2}' -> –ø–µ—Ä–µ–∫—Ä—ã—Ç–∏–µ: ${test6_result}`);
console.log(`–û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: 6`);
console.log(`–¢–µ—Å—Ç ${test6_result === 6 ? '–ü–†–û–ô–î–ï–ù' : '–ù–ï –ü–†–û–ô–î–ï–ù'}`);
console.log();

// –¢–µ—Å—Ç 7: –Æ–Ω–∏–∫–æ–¥
const test7_str1 = 'helloüí°';
const test7_str2 = 'üí°world';
const test7_result = findMaxOverlap(test7_str1, test7_str2);
console.log(`–¢–µ—Å—Ç 7: '${test7_str1}' –∏ '${test7_str2}' -> –ø–µ—Ä–µ–∫—Ä—ã—Ç–∏–µ: ${test7_result}`);
console.log(`–û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: 1 (—ç–º–æ–¥–∑–∏)`);
console.log(`–¢–µ—Å—Ç ${test7_result === 1 ? '–ü–†–û–ô–î–ï–ù' : '–ù–ï –ü–†–û–ô–î–ï–ù'}`);
console.log();

// –¢–µ—Å—Ç –Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
console.log('–¢–µ—Å—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏:');
console.log('-----------------------');

// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –±–æ–ª—å—à–∏–µ —Å—Ç—Ä–æ–∫–∏ —Å –ø–µ—Ä–µ–∫—Ä—ã—Ç–∏–µ–º
const largePrefix = 'a'.repeat(100000);
const largeSuffix = 'b'.repeat(100000);
const overlapText = 'ThisIsOverlappingText';

const largeStr1 = largePrefix + overlapText;
const largeStr2 = overlapText + largeSuffix;

console.log(`–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –±–æ–ª—å—à–∏–º–∏ —Å—Ç—Ä–æ–∫–∞–º–∏ (~100K —Å–∏–º–≤–æ–ª–æ–≤)...`);
const startTime = Date.now();
const largeResult = findMaxOverlap(largeStr1, largeStr2);
const endTime = Date.now();

console.log(`–ù–∞–π–¥–µ–Ω–Ω–æ–µ –ø–µ—Ä–µ–∫—Ä—ã—Ç–∏–µ: ${largeResult} —Å–∏–º–≤–æ–ª–æ–≤`);
console.log(`–û–∂–∏–¥–∞–µ–º–æ–µ –ø–µ—Ä–µ–∫—Ä—ã—Ç–∏–µ: ${overlapText.length} —Å–∏–º–≤–æ–ª–æ–≤`);
console.log(`–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ${endTime - startTime} –º—Å`);
console.log(`–¢–µ—Å—Ç ${largeResult === overlapText.length ? '–ü–†–û–ô–î–ï–ù' : '–ù–ï –ü–†–û–ô–î–ï–ù'}`);
